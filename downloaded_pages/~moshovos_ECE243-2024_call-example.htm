<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 12 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=EN-US>

<div class=Section1>

<p class=MsoNormal>int foo (int a1, int a2, int a3, int a4, int a5, int a6, int
a7)<br>
{<br>
                return boo (a7, a6, a5, a3, a4) + coo (a2, a3) + a1;<br>
}</p>

<p class=MsoNormal>When foo gets called the stack looks as follows:</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+0</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a5</p>
  </td>
 </tr>
 <tr style='height:15.15pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+4</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a6</p>
  </td>
 </tr>
 <tr style='height:15.15pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+8</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a7</p>
  </td>
 </tr>
 <tr style='height:15.15pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>&nbsp;</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>&nbsp;</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>First we look whether foo() calls any other functions. Since
it does we need to save and restore ra at the prologue and epilogue
respectively:</p>

<p class=MsoNormal>foo:        addi       sp, sp, -4<br>
                stw         ra, 0(sp)</p>

<p class=MsoNormal>                …</p>

<p class=MsoNormal>epi:        ldw         ra, 0(sp)<br>
                addi       sp, sp, 4<br>
                ret</p>

<p class=MsoNormal>Now it’s time to look at foo’s main body. This can be
rewritten as follows to illustrate the sequence in which the various actions
should take place:</p>

<p class=MsoNormal style='margin-left:.5in'>int foo (int a1, int a2, int a3,
int a4, int a5, int a6, int a7)<br>
{<br>
                tmp1 = boo (a7, a6, a5, a3, a4);<br>
                 tmp2 = coo (a2, a3) <br>
                return tmp1 + tmp2 + a1;<br>
}</p>

<p class=MsoNormal>Notice that the value for parameter a1 has to “survive” the
calls to boo and coo. So a1 has to be pushed on the stack before the call to
boo and be restore from the stack after the call to coo returns. So the
structure of foo is as follows:</p>

<p class=MsoNormal>foo:        push ra<br>
                push a1<br>
                code to call boo<br>
                code to call coo<br>
                pop a1<br>
                calculate return value (tmp1 + tmp2 + a1)<br>
                pop ra<br>
                ret</p>

<p class=MsoNormal>Here’s the code for foo with the saving and restoring of a1:</p>

<p class=MsoNormal>foo:        addi       sp, sp, -4<br>
                stw         ra, 0(sp)</p>

<p class=MsoNormal>                addi       sp, sp, -4<br>
                stw         r4, 0(sp)               # r4 contains a1</p>

<p class=MsoNormal>                …</p>

<p class=MsoNormal style='margin-left:.5in'># tmp1 = tmp1 + tmp2   <br>
ldw         r4, 0(sp)               # restore r4’s original value (a1) from the
stack<br>
addi       sp, sp, 4</p>

<p class=MsoNormal>                # calculate tmp1 + a1</p>

<p class=MsoNormal>epi:        ldw         ra, 0(sp)<br>
                addi       sp, sp, 4<br>
                ret</p>

<p class=MsoNormal>Now let’s look at the two calls:</p>

<p class=MsoNormal>                tmp1 = boo (a7, a6, a5, a3, a4);<br>
                 tmp2 = coo (a2, a3) ;</p>

<p class=MsoNormal><br>
Notice that a2 and a3  are used *after* the call to boo. These two values are,
upon entry to foo, in r5 and r6. So, we must explicitly preserve them as they
are in *caller-saved* registers. This is what we did before for a1 which was
stored in r4.</p>

<p class=MsoNormal>Here’s the code for foo with the saving and restoring of a2
and a3:</p>

<p class=MsoNormal>foo:        addi       sp, sp, -4<br>
                stw         ra, 0(sp)</p>

<p class=MsoNormal>                addi       sp, sp, -4<br>
                stw         r4, 0(sp)               # r4 contains a1</p>

<p class=MsoNormal>                addi       sp, sp, -8              # save r5
and r6 (a2 and a3) on the stack<br>
                stw         r5, 0(sp)<br>
                stw         r6, 4(sp)</p>

<p class=MsoNormal>                #code for tmp1= boo (a7, a6, a5, a3, a4);</p>

<p class=MsoNormal style='margin-left:.5in'>ldw         r5, 0(sp)               #
restore r5 and r6 from the stack<br>
ldw         r6, 4(sp)<br>
addi       sp, sp, 8</p>

<p class=MsoNormal>stack1:</p>

<p class=MsoNormal style='margin-left:.5in'># code for tmp2 = coo (a2, a3) ;</p>

<p class=MsoNormal style='margin-left:.5in'># tmp1 = tmp1 + tmp2<br>
ldw         r4, 0(sp)               # restore r4’s original value (a1) from the
stack<br>
addi       sp, sp, 4</p>

<p class=MsoNormal style='margin-left:.5in'># calculate tmp1 + a1</p>

<p class=MsoNormal>epi:        ldw         ra, 0(sp)<br>
                addi       sp, sp, 4<br>
                ret</p>

<p class=MsoNormal>Just after the push of r5 and r6 (label stack1:) the stack looks
like this:</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+0</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a2</p>
  </td>
 </tr>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+4</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a3</p>
  </td>
 </tr>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+8</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a1</p>
  </td>
 </tr>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+12</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>ra</p>
  </td>
 </tr>
 <tr style='height:15.15pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+16</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a5</p>
  </td>
 </tr>
 <tr style='height:15.15pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+20</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a6</p>
  </td>
 </tr>
 <tr style='height:15.15pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+24</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a7</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Let’s implement the call to boo (a7, a6, a5, a3, a4).  We
need to pass the first four parameters in registers r4 through r7 and the firth
on the stack. At this point r4=a1, r5=a2, r6=a3, and r7=a4. The rest of the
parameters to foo are on the stack as shown before. To call boo, we need to
have r4=a7, r5=a6, r6=a5, r7=a3 and on the top of the stack we should have a4.
Here’s the code:</p>

<p class=MsoNormal style='margin-left:.5in'>addi       sp, sp, -4<br>
stw         r7, 0(sp)               # pass a4 as the fifth parameter to boo<br>
ldw         r4, 28(sp)             # r4 = a7 which is now at distance 24+4 from
the top of the stack<br>
ldw         r5,24(sp)              # r5 = a6 +24 from the top of the stack<br>
add        r7, r6, r0               # r7 = a3 which in r6, this has to happen
before the next instruction<br>
                                                # otherwise we lose a3<br>
ldw         r6, 20(sp)             # r6 = a5<br>
call          boo<br>
add        sp, sp, 4                # pop the fifth argument – not needed
anymore</p>

<p class=MsoNormal>Now we need to call coo (a2, a3). At this point the stack
looks as shown before. A2 is at the top of the stack and a3 is at distance +4.
We have one more thing to take care of. We just got a return value from the
call to boo in r2. R2 will be overwritten by the call to coo. Hence we got to
preserve it. We do that around the call to coo:</p>

<p class=MsoNormal style='margin-left:.5in'>addi       sp, sp, -4<br>
stw         r2, 0(sp)               # push the return value of boo onto the
stack<br>
                                                # that’s tmp1<br>
add        r4, r5, r0               # r4 = a2, the first parameter to pass to
coo<br>
add        r5, r6, r0               # r5 = a3<br>
call          coo<br>
# calculate tmp1+=t mp2, we’ll keep the result in r2<br>
ldw         r4, 0(sp)               # restore tmp1<br>
add        r2, r2, r4               # tmp1 + tmp2<br>
addi       sp, sp, 4                # pop the return value of boo from the
stack</p>

<p class=MsoNormal style='margin-left:.5in'>&nbsp;</p>

<p class=MsoNormal>Here’s the complete code for foo:<br>
<br>
 foo:       addi       sp, sp, -4<br>
                stw         ra, 0(sp)</p>

<p class=MsoNormal>                addi       sp, sp, -4<br>
                stw         r4, 0(sp)               # r4 contains a1</p>

<p class=MsoNormal>                addi       sp, sp, -8              # save r5
and r6 (a2 and a3) on the stack<br>
                stw         r5, 0(sp)<br>
                stw         r6, 4(sp)</p>

<p class=MsoNormal style='margin-left:.5in'>#code for tmp1= boo (a7, a6, a5, a3,
a4);<br>
addi       sp, sp, -4<br>
stw         r7, 0(sp)               # pass a4 as the fifth parameter to boo<br>
ldw         r4, 28(sp)             # r4 = a7 which is now at distance 24+4 from
the top of the stack<br>
ldw         r5,24(sp)              # r5 = a6 +24 from the top of the stack<br>
add        r7, r6, r0               # r7 = a3 which in r6, this has to happen
before the next instruction<br>
                                                # otherwise we lose a3<br>
ldw         r6, 20(sp)             # r6 = a5<br>
call          boo<br>
add        sp, sp, 4                # pop the fifth argument – not needed
anymore</p>

<p class=MsoNormal style='margin-left:.5in'>ldw         r5, 0(sp)               #
restore r5 and r6 from the stack<br>
ldw         r6, 4(sp)<br>
addi       sp, sp, 8</p>

<p class=MsoNormal style='margin-left:.5in'># code for tmp2 = coo (a2, a3) ;</p>

<p class=MsoNormal style='margin-left:.5in'>addi       sp, sp, -4<br>
stw         r2, 0(sp)               # push the return value of boo onto the
stack<br>
                                                # that’s tmp1<br>
add        r4, r5, r0               # r4 = a2, the first parameter to pass to
coo<br>
add        r5, r6, r0               # r5 = a3<br>
call          coo<br>
# calculate tmp1+=t mp2, we’ll keep the result in r2<br>
ldw         r4, 0(sp)               # restore tmp1<br>
add        r2, r2, r4               # tmp1 + tmp2<br>
addi       sp, sp, 4                # pop the return value of boo from the
stack</p>

<p class=MsoNormal style='margin-left:.5in'># tmp1 = tmp1 + tmp2<br>
ldw         r4, 0(sp)               # restore r4’s original value (a1) from the
stack<br>
addi       sp, sp, 4<br>
<br>
# calculate tmp1 + a1<br>
add        r2, r2, r4               # r2 += a1</p>

<p class=MsoNormal style='margin-left:.5in'>epi:        ldw         ra, 0(sp)<br>
                addi       sp, sp, 4<br>
                ret</p>

<p class=MsoNormal>This code does step-by-step adjustments on the stack any
time it needs to push or pop values. Now that we wrote foo we can determine
what is the maximum number of elements we push on the stack and aggregate these
changes. We needed space for saving ra, a1, a2, a3, passing a firth argument to
boo, and saving the return value of boo. We can accommodate all these by allocating
space for six words on the stack. Here’s one possible allocation for the stack
frame:</p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+0</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>5<sup>th</sup> arg to boo</p>
  </td>
 </tr>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+4</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>ret value of boo</p>
  </td>
 </tr>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+8</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a3</p>
  </td>
 </tr>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+12</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a2</p>
  </td>
 </tr>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+16</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a1</p>
  </td>
 </tr>
 <tr style='height:14.3pt'>
  <td width=300 valign=top style='width:225.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+20</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:14.3pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>ra</p>
  </td>
 </tr>
 <tr style='height:15.15pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'> When foo gets called stack points here +24</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a5</p>
  </td>
 </tr>
 <tr style='height:15.15pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+28</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a6</p>
  </td>
 </tr>
 <tr style='height:15.15pt'>
  <td width=300 valign=top style='width:225.1pt;border:none;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=right style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:right;line-height:normal'>+32</p>
  </td>
  <td width=139 valign=top style='width:104.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0in 5.4pt 0in 5.4pt;height:15.15pt'>
  <p class=MsoNormal align=center style='margin-bottom:0in;margin-bottom:.0001pt;
  text-align:center;line-height:normal'>a7</p>
  </td>
 </tr>
</table>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal>Here’s the code for foo assuming this stack frame. It’s much
easier to follow:</p>

<p class=MsoNormal>foo:        addi       sp, sp, 24<br>
                stw         ra, 20(sp)<br>
                stw         r4, 16(sp)<br>
                stw         r5, 12(sp)<br>
                stw         r6, 8(sp)</p>

<p class=MsoNormal>                # call boo (a7, a6, a5, a3, a4).  <br>
                stw         r7, 0(sp)               # pass a4 as the fifth argument<br>
                ldw         r4, 32(sp)             # a7 is the first argument<br>
                ldw         r5, 28(sp)             # a6 is the second<br>
                ldw         r6, 24(sp)             # a5 is the third<br>
                ldw         r7, 8(sp)               # a7 is the fourth (we
could have moved from r6 just before the <br>
                                                                # previous load<br>
                call          boo<br>
                stw         r2, 4(sp)               # save boo’s return value</p>

<p class=MsoNormal>                # call coo (a2, a3) <br>
                ldw         r4, 12(sp)<br>
                ldw         r5, 8(sp)<br>
                call          coo</p>

<p class=MsoNormal>                # calculate return value<br>
                ldw         r4, 4(sp)               # return value of boo<br>
                                                                # using r4 as
temporary, it’s caller-saved so no need to do anything<br>
                add        r2, r2, r4               # add to return value of
coo<br>
                ldw         r4, 16(sp)             # get a1<br>
                add        r2, r2, r4</p>

<p class=MsoNormal>epi:        ldw         ra, 20(sp)<br>
                addi       sp, sp, -24<br>
                ret</p>

<p class=MsoNormal>Further reduction in instruction count is possible. For example,
we could use callee-saved registers to preserve a1, a2, and a3. While that
would reduce instruction count, it could also make the code harder to follow.
So, it’s debatable whether that would be good programming practice (assuming
that performance is satisfactory to start with).</p>

</div>

</body>

</html>
